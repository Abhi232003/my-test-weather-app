name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --passWithNoTests
        continue-on-error: true

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest

      - name: Deploy to Google Kubernetes Engine
        uses: google-github-actions/deploy-gke@v0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GCP_REGION }}
          manifests: |
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: my-test-weather-app
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: my-test-weather-app
              template:
                metadata:
                  labels:
                    app: my-test-weather-app
                spec:
                  containers:
                  - name: my-test-weather-app
                    image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest
                    ports:
                    - containerPort: 8080
          project_id: ${{ secrets.GCP_PROJECT_ID }}