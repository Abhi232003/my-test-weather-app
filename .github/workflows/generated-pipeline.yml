name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Set Jest executable permissions
      run: chmod +x node_modules/.bin/jest

    - name: Run tests
      run: npx jest
      continue-on-error: true

  docker-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Export Google Cloud env vars
      run: |
        echo "PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
        echo "REGION=${{ secrets.GCP_REGION }}" >> $GITHUB_ENV
        echo "IMAGE_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: beta

    - name: Authenticate Docker to Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Ensure Artifact Registry repository exists
      run: |
        if ! gcloud artifacts repositories describe ${{ env.IMAGE_NAME }} --location=${{ env.REGION }} --project=${{ env.PROJECT_ID }}; then
          gcloud artifacts repositories create ${{ env.IMAGE_NAME }} --repository-format=docker --location=${{ env.REGION }} --description="Docker repository" --project=${{ env.PROJECT_ID }}
        fi

    - name: Build Docker image
      run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

    - name: Tag Docker image as latest
      run: docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Push Docker image (commit SHA)
      run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Push Docker image (latest)
      run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.IMAGE_NAME }} \
          --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:latest \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated