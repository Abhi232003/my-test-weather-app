name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set Jest permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npx jest
        continue-on-error: true

  docker_and_deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'beta'

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Ensure Artifact Registry repository exists
        run: |
          if ! gcloud artifacts repositories describe express-app-repo --location=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }}; then
            gcloud artifacts repositories create express-app-repo --repository-format=docker --location=${{ secrets.GCP_REGION }} --description="Docker repository" --project=${{ secrets.GCP_PROJECT_ID }}
          fi

      - name: Build Docker image
        run: docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:${{ github.sha }} .

      - name: Tag Docker image as latest
        run: docker tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:${{ github.sha }} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:latest

      - name: Push Docker image (commit SHA)
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:${{ github.sha }}

      - name: Push Docker image (latest)
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy express-app \
            --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/express-app-repo/express-app:latest \
            --region=${{ secrets.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars=NODE_ENV=production,OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}