name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Ensure Jest is executable
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npx jest
        continue-on-error: true

  docker:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Export Google Cloud env vars
        run: |
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_REGION=${{ secrets.GCP_REGION }}" >> $GITHUB_ENV

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: beta

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev

      - name: Ensure Artifact Registry repository exists
        run: |
          if ! gcloud artifacts repositories describe express-app-repo --location=${{ env.GOOGLE_CLOUD_REGION }} --project=${{ env.GOOGLE_CLOUD_PROJECT }}; then
            gcloud artifacts repositories create express-app-repo --repository-format=docker --location=${{ env.GOOGLE_CLOUD_REGION }} --description="Docker repository" --project=${{ env.GOOGLE_CLOUD_PROJECT }}
          fi

      - name: Build Docker image
        run: docker build -t ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:${{ github.sha }} .

      - name: Tag Docker image as latest
        run: docker tag ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:${{ github.sha }} ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:latest

      - name: Push Docker image (commit SHA)
        run: docker push ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:${{ github.sha }}

      - name: Push Docker image (latest)
        run: docker push ${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy express-app \
            --image=${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/express-app-repo/express-app:latest \
            --region=${{ env.GOOGLE_CLOUD_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --project=${{ env.GOOGLE_CLOUD_PROJECT }}