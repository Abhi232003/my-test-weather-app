name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --passWithNoTests
        continue-on-error: true

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [setup, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Create Artifact Registry repository
        run: gcloud artifacts repositories create ${{ github.event.repository.name }} --repository-format=docker --location=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }} || echo "Repository may already exist"

      - name: Build Docker image
        run: docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ github.event.repository.name }} \
            --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest \
            --region=${{ secrets.GCP_REGION }} \
            --platform=managed \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --allow-unauthenticated